#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define MAIN    0
#define QWERT   1
#define NUM     2
#define MOVE    3
#define SYM     4
#define FUNC    5
#define BLE     6


/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <2 4>;
            then-layer = <6>;
        };
    };
};


&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_dash {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp minus>;
        };
        
        combo_change {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp RALT>;
        };
        
        combo_quote {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp SQT>;
        };

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
        combo_alt1 {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp LALT>;
        };

        combo_ctl1 {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LCTRL>;
        };

        combo_sft1 {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LSHFT>;
        };

        combo_alt2 {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp LALT>;
        };

        combo_ctl2 {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp LCTRL>;
        };

        combo_sft2 {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp LSHFT>;
        };

        combo_bright {
            timeout-ms = <50>;
            key-positions = <17 26>;
            bindings = <&kp B>;
        };

        combo_capsword {
            timeout-ms = <50>;
            key-positions = <14 16>;
            bindings = <&caps_word>;
        };

    };
};

/ {
    macros {
        lan_chan: lan_chan {
            label = "ZM_lan_chan";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp RALT &tog 1>
                ;
                
        undo: undo {
            label = "ZM_undo";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp Z>
                , <&macro_release &kp LCTRL>
                ;
                
        cut: cut {
            label = "ZM_cut";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp x>
                , <&macro_release &kp LCTRL>
                ;

        copy: copy {
            label = "ZM_copy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp c>
                , <&macro_release &kp LCTRL>
                ;

      paste: paste {
            label = "ZM_paste";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp v>
                , <&macro_release &kp LCTRL>
                ;
                
      redo: redo {
            label = "ZM_redo";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp y>
                , <&macro_release &kp LCTRL>
                ;

      save: save {
            label = "ZM_save";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp s>
                , <&macro_release &kp LCTRL>
                ;

      sall: sall {
            label = "ZM_sall";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp a>
                , <&macro_release &kp LCTRL>
                ;

        };
    };
};

    keymap {
        compatible = "zmk,keymap";

        main_layer {
            label = "Main";

            bindings = <
    &kp Q        &kp W        &kp F       &kp P         &kp B                                   &kp J         &kp L        &kp U         &kp Y       &kp SEMI
    &kp A        &kp R        &kp S       &kp T         &kp G                                   &kp M         &kp N        &kp E         &kp I       &kp O
    &kp Z        &kp X        &kp C       &kp D         &kp V                                   &kp K         &kp H        &kp COMMA     &kp DOT     &kp FSLH
                              &kp LSHFT   &lt NUM SPACE &lt SYM TAB                             &lt MOVE BSPC &lt FUNC DEL &kp RET
            >;
        };

        qwert_layer {
            label = "Qwert";

            bindings = <
    &kp Q        &kp W        &kp E       &kp R         &kp T                                   &kp Y         &kp U        &kp I         &kp O       &kp P
    &kp A        &kp S        &kp D       &kp F         &kp G                                   &kp H         &kp J        &kp K         &kp L       &kp SEMI
    &kp Z        &kp X        &kp C       &kp V         &kp B                                   &kp N         &kp M        &kp COMMA     &kp DOT     &kp FSLH
                              &trans      &trans        &trans                                  &trans        &trans       &trans
           
        };
        
        num_layer {
            label = "Num";

            bindings = <
    &trans       &trans       &trans      &save         &bootloader                             &kp ASTRK     &kp N7       &kp N8        &kp N9      &kp MINUS
    &sk LGUI     &sk LALT     &sk LCTRL   &sk LSHFT     &sall                                   &kp FSLH      &kp N4       &kp N5        &kp N6      &kp PLUS
    &undo        &cut         &copy       &paste        &redo                                   &kp EQUAL     &kp N1       &kp N2        &kp N3      &kp N0
                              &trans        &trans      &trans                                  &kp BSPC      &kp SPACE    &kp DOT
            >;
        };    

        move_layer {
            label = "Move";

            bindings = <
    &kp CAPS     &kp PG_UP    &kp UP      &kp PG_DN     &trans                                   &bootloader   &reset       &trans        &lan_chan   &tog QWERT
    &kp HOME     &kp LEFT     &kp DOWN    &kp RIGHT     &kp END                                  &trans        &sk LSHIFT   &sk LCTRL     &sk LALT    &sk LGUI
    &sk LGUI     &sk LALT     &sk LCTRL    &sk LSHFT     &trans                                  &redo         &paste       &copy         &cut        &undo
                              &none       &kp BSPC      &kp DEL                                  &trans        &trans       &trans
            >;
        };     

        sym_layer {
            label = "Sym";

            bindings = <
    &trans      &trans      &trans      &trans      &trans                                       &kp PSCRN   &kp AMPS    &kp ASTRK   &kp LPAR    &kp RPAR
    &trans      &trans      &trans      &trans      &trans                                       &kp SLCK    &kp DLLR    &kp PRCNT   &kp CARET   &kp GRAVE
    &trans      &trans      &trans      &trans      &trans                                 &kp PAUSE_BREAK   &kp EXCL    &kp AT      &kp HASH    &kp NUBS
                            &trans      &trans      &trans                                       &kp LBKT    &kp RBKT    &none
            >;
        };   

        func_layer {
            label = "Func";

            bindings = <
    &kp F9     &kp F10    &kp F11   &kp F12    &kp K_VOL_UP                                      &trans   &kp LANG1    &trans        &trans      &trans
    &kp F5     &kp F6     &kp F7    &kp F8     &kp C_MUTE                                        &trans   &sk LSHF T   &sk LCTRL     &sk LALT    &sk LGUI
    &sk F1     &sk F2     &sk F3    &sk F4     &kp K_VOL_DN                                      &redo    &paste       &copy         &cut        &undo
                              &none      &none      &none                                        &trans   &trans       &trans
            >;
        };

        ble_layer {
            label = "BLE";

            bindings = <
    &trans       &trans       &bt BT_PRV   &bt BT_NXT    &trans                                  &trans      &trans      &trans      &trans      &trans
    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4                            &trans      &trans      &trans      &trans      &trans
    &bt BT_CLR   &trans       &trans       &trans        &trans                                  &trans      &trans      &trans      &trans      &trans
                                           &out OUT_BLE  &out OUT_TOG  &out OUT_USB              &trans      &trans      &trans
            >;
        };     
    };
};
