#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define FUNC    3
#define MEDIA   4
#define MOUSE   5
#define WINNAV  6

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp LC(ESC)>;
        };

        combo_change {
            timeout-ms = <50>;
            key-positions = <29 28>;
            bindings = <&kp RALT>;
        };

        combo_dash {
            timeout-ms = <50>;
            key-positions = <9 8>;
            bindings = <&kp MINUS>;
        };

        combo_quote {
            bindings = <&kp SQT>;
            key-positions = <28 27>;
        };

        combo_alt1 {
            bindings = <&kp LALT>;
            key-positions = <10 11>;
        };

        combo_ctl1 {
            bindings = <&kp LCTRL>;
            key-positions = <11 12>;
        };

        combo_sft1 {
            bindings = <&kp LSHFT>;
            key-positions = <12 13>;
        };

        combo_sft2 {
            bindings = <&kp LSHFT>;
            key-positions = <16 17>;
        };

        combo_ctl2 {
            bindings = <&kp LCTRL>;
            key-positions = <17 18>;
        };

        combo_alt2 {
            bindings = <&kp LALT>;
            key-positions = <18 19>;
        };

        combo_bright {
            bindings = <&kp B>;
            key-positions = <17 26>;
        };

        combo_capsword {
            bindings = <&caps_word>;
            key-positions = <13 16>;
        };
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings =
                <&kp>,
                <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    macros {
        lan_chan: lan_chan {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp RALT &tog 1>;
        };
        undo: undo {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(Z)>;
        };
        cut: cut {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(X)>;
        };
        copy: copy {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(C)>;
        };
        paste: paste {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(V)>;
        };
        redo: redo {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(Y)>;
        };
        save: save {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(S)>;
        };
        sall: sall {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(A)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";
            bindings = <
  &kp Q           &kp W            &kp F              &kp P              &kp B               &kp J        &kp L      &kp U       &kp Y    &kp SEMI
  &kp A           &kp R            &kp S              &kp T              &kp G               &kp M        &kp N      &kp E  &hm RGUI I  &hm RCTL O
  &kp Z           &kp X            &kp C              &kp D              &kp V               &kp K        &kp H  &kp COMMA     &kp DOT    &kp FSLH
                                 &kp DEL          &lt 1 RET          &lt 3 TAB          &lt 4 BSPC  &lt 2 SPACE    &kp SQT
            >;
        };

        nav_layer {
            label = "Navigation";
            bindings = <
  &kp ESC          &kp PG_UP            &kp UP          &kp PG_DN           &trans          &kp ASTRK     &kp N7   &kp N8  &kp N9  &kp MINUS
 &kp HOME           &kp LEFT          &kp DOWN          &kp RIGHT          &kp END           &kp FSLH     &kp N4   &kp N5  &kp N6   &kp PLUS
   &trans             &trans            &trans             &trans           &trans          &kp EQUAL     &kp N1   &kp N2  &kp N3     &kp N0
                                        &trans             &trans          &kp TAB           &kp BSPC  &kp SPACE  &kp DOT
            >;
        };

        sym_layer {
            label = "Symbols";
            bindings = <
  &kp EXCL             &kp AT                 &kp HASH                  &kp DLLR           &kp PRCNT          &kp CARET           &kp AMPS    &kp ASTRK  &kp UNDER  &kp EQUAL
 &kp MINUS           &kp LBKT                 &kp LBRC                  &kp LPAR              &kp LT             &kp GT           &kp RPAR     &kp RBRC   &kp RBKT   &kp PLUS
  &kp CAPS          &kp GRAVE          &kp LC(LS(TAB))          &kp LC(LG(LEFT))          &caps_word             &trans  &kp LC(LG(RIGHT))  &kp LC(TAB)     &trans   &kp BSLH
                                                &trans                   &kp RET             &kp DEL           &kp BSPC             &trans       &trans
            >;
        };

        func_layer {
            label = "Function";
            bindings = <
  &bootloader          &kp LS(PG_UP)            &kp LS(UP)          &kp LS(PG_DN)               &trans                &kp C_MUTE  &kp F7     &kp F8  &kp F9  &kp F10
 &kp LS(HOME)           &kp LS(LEFT)          &kp LS(DOWN)          &kp LS(RIGHT)          &kp LS(END)              &kp K_VOL_UP  &kp F4     &kp F5  &kp F6  &kp F11
 &bt BT_SEL 3           &bt BT_SEL 2          &bt BT_SEL 1           &bt BT_SEL 0           &bt BT_CLR              &kp K_VOL_DN  &kp F1     &kp F2  &kp F3  &kp F12
                                              &out OUT_USB           &out OUT_BLE               &trans          &kp C_PLAY_PAUSE  &trans  &kp SPACE
            >;
        };

        media_layer {
            label = "Media";
            bindings = <
 &trans          &trans          &trans          &trans          &trans              &trans    &bt BT_PRV    &bt BT_NXT        &trans        &trans
 &trans          &trans          &trans          &trans          &trans              &trans        &trans        &trans        &trans        &trans
 &trans          &trans          &trans          &trans          &trans          &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
                                 &trans          &trans          &trans              &trans  &out OUT_BLE  &out OUT_USB
            >;
        };

        mouse_layer {
            label = "Mouse";
            bindings = <
 &bootloader          &trans          &trans          &trans          &trans          &trans  &trans  &trans  &trans  &trans
      &trans          &trans          &trans          &trans          &trans          &trans  &trans  &trans  &trans  &trans
      &trans          &trans          &trans          &trans          &trans          &trans  &trans  &trans  &trans  &trans
                                      &trans          &trans          &trans          &trans  &trans  &trans
            >;
        };

        winnav_layer {
            label = "Win Navigation";
            bindings = <
 &trans                &trans            &kp LG(UP)                 &trans          &trans          &trans  &trans  &trans  &trans  &trans
 &trans          &kp LG(LEFT)          &kp LG(DOWN)          &kp LG(RIGHT)          &trans          &trans  &trans  &trans  &trans  &trans
 &trans                &trans                &trans                 &trans          &trans          &trans  &trans  &trans  &trans  &trans
                                             &trans                 &trans          &trans          &trans  &trans  &trans
            >;
        };
    };
};
