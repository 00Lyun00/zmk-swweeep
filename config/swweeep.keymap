#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define FUNC    3
#define MEDIA   4
#define MOUSE   5
#define WINNAV  6

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp LC(ESC)>;
        };

        combo_change {
            timeout-ms = <50>;
            key-positions = <29 28>;
            bindings = <&kp RALT>;
        };

        combo_dash {
            timeout-ms = <50>;
            key-positions = <9 8>;
            bindings = <&kp MINUS>;
        };

        combo_quote {
            bindings = <&kp SQT>;
            key-positions = <28 27>;
        };

        combo_alt1 {
            bindings = <&kp LALT>;
            key-positions = <10 11>;
        };

        combo_ctl1 {
            bindings = <&kp LCTRL>;
            key-positions = <11 12>;
        };

        combo_sft1 {
            bindings = <&kp LSHFT>;
            key-positions = <12 13>;
        };

        combo_sft2 {
            bindings = <&kp LSHFT>;
            key-positions = <16 17>;
        };

        combo_ctl2 {
            bindings = <&kp LCTRL>;
            key-positions = <17 18>;
        };

        combo_alt2 {
            bindings = <&kp LALT>;
            key-positions = <18 19>;
        };

        combo_bright {
            bindings = <&kp B>;
            key-positions = <17 26>;
        };

        combo_capsword {
            bindings = <&caps_word>;
            key-positions = <13 16>;
        };
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings =
                <&kp>,
                <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    macros {
        lan_chan: lan_chan {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp RALT &tog 1>;
        };
        undo: undo {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(Z)>;
        };
        cut: cut {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(X)>;
        };
        copy: copy {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(C)>;
        };
        paste: paste {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(V)>;
        };
        redo: redo {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(Y)>;
        };
        save: save {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(S)>;
        };
        sall: sall {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(A)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Main";
            bindings = <
  &kp Q           &kp W            &kp F              &kp P              &kp B               &kp J        &kp L      &kp U      &kp Y    &kp SEMI
  &kp A           &kp R            &kp S              &kp T              &kp G               &kp M        &kp N      &kp E      &kp I    &kp O
  &kp Z           &kp X            &kp C              &kp D              &kp V               &kp K        &kp H  &kp COMMA      &kp DOT  &kp FSLH
                                 &kp LSHFT          &lt 2 SPACE          &lt 4 TAB          &lt 3 BSPC  &lt 5 DEL    &kp RET
            >;
        };

        nav_layer {
            label = "Qwert";
            bindings = <
    &kp Q        &kp W        &kp E       &kp R         &kp T                                   &kp Y         &kp U        &kp I         &kp O       &kp P
    &kp A        &kp S        &kp D       &kp F         &kp G                                   &kp H         &kp J        &kp K         &kp L       &kp SEMI
    &kp Z        &kp X        &kp C       &kp V         &kp B                                   &kp N         &kp M        &kp COMMA     &kp DOT     &kp FSLH
                              &trans      &trans        &trans                                  &trans        &trans       &trans
            >;
        };

        sym_layer {
            label = "Num";
            bindings = <
    &trans       &trans       &trans      &save         &bootloader                             &kp ASTRK     &kp N7       &kp N8        &kp N9      &kp MINUS
    &sk LGUI     &sk LALT     &sk LCTRL   &sk LSHFT     &sall                                   &kp FSLH      &kp N4       &kp N5        &kp N6      &kp PLUS
    &undo        &cut         &copy       &paste        &redo                                   &kp EQUAL     &kp N1       &kp N2        &kp N3      &kp N0
                              &trans        &trans      &trans                                  &kp BSPC      &kp SPACE    &kp DOT
            >;
        };

        func_layer {
            label = "Move";
            bindings = <
    &kp CAPS     &kp PG_UP    &kp UP      &kp PG_DN     &trans                                   &bootloader   &reset       &trans        &lan_chan   &tog QWERT
    &kp HOME     &kp LEFT     &kp DOWN    &kp RIGHT     &kp END                                  &trans        &sk LSHIFT   &sk LCTRL     &sk LALT    &sk LGUI
    &sk LGUI     &sk LALT     &sk LCTRL    &sk LSHFT     &trans                                  &redo         &paste       &copy         &cut        &undo
                              &none       &kp BSPC      &kp DEL                                  &trans        &trans       &trans
            >;
        };

        media_layer {
            label = "Sym";
            bindings = <
    &trans      &trans      &trans      &trans      &trans                                       &kp PSCRN   &kp AMPS    &kp ASTRK   &kp LPAR    &kp RPAR
    &trans      &trans      &trans      &trans      &trans                                       &kp SLCK    &kp DLLR    &kp PRCNT   &kp CARET   &kp GRAVE
    &trans      &trans      &trans      &trans      &trans                                 &kp PAUSE_BREAK   &kp EXCL    &kp AT      &kp HASH    &kp NUBS
                            &trans      &trans      &trans                                       &kp LBKT    &kp RBKT    &none
            >;
        };

        mouse_layer {
            label = "Func";
            bindings = <
    &kp F9     &kp F10    &kp F11   &kp F12    &kp K_VOL_UP                                      &trans   &kp LANG1    &trans        &trans      &trans
    &kp F5     &kp F6     &kp F7    &kp F8     &kp C_MUTE                                        &trans   &sk LSHF T   &sk LCTRL     &sk LALT    &sk LGUI
    &sk F1     &sk F2     &sk F3    &sk F4     &kp K_VOL_DN                                      &redo    &paste       &copy         &cut        &undo
                              &none      &none      &none                                        &trans   &trans       &trans
            >;
        };

        winnav_layer {
            label = "BLE";
            bindings = <
    &trans       &trans       &bt BT_PRV   &bt BT_NXT    &trans                                  &trans      &trans      &trans      &trans      &trans
    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4                            &trans      &trans      &trans      &trans      &trans
    &bt BT_CLR   &trans       &trans       &trans        &trans                                  &trans      &trans      &trans      &trans      &trans
                                           &out OUT_BLE  &out OUT_TOG  &out OUT_USB              &trans      &trans      &trans
            >;
        };
    };
};
